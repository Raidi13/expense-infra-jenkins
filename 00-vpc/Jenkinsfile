pipeline {
    agent {
        label 'AGENT-1'
    }
    options{
        timeout(time: 30,unit: 'MINUTES')
        disableConcurrentBuilds ()
           }
    //  environment {
    //     DEBUG = 'true'
    // }
    parameters {
        
        choice(name: 'ACTION', choices: ['apply', 'destory'], description: 'select Action')
    }
    stages {
        stage('init') { 
            steps {
                sh 'cd 00-vpc'
                sh 'terraform init -reconfigure'
            }
        }
        stage('plan') { 
            steps {
                withAWS(region: 'us-east-1', credentials: 'your-credentials-id') {
                    sh 'cd 00-vpc'
                    sh 'terraform plan -out=tfplan'
            }
          }
        }
//         stage('Deploy') {
//             when {
//                 expression { env.GIT_BRANCH != "origin/main" }
//             }
//             steps {

//                     sh 'echo This is deploy'
//                     //error 'pipeline failed'

//             }
//         }
//         stage('print params'){
//             steps{
//                 echo "Hello ${params.PERSON}"
//                 echo "Biography: ${params.BIOGRAPHY}"
//                 echo "Toggle: ${params.TOGGLE}"
//                 echo "Choice: ${params.CHOICE}"
//                 echo "Password: ${params.PASSWORD}"

//             }
//         }
//    }
    }
post {
    always{
        echo 'This sections runs always'
        deleteDir() 
    }
    success{
        echo 'This section runs when pipeline success'
    }
    failure{
        echo 'This section runs when pipline failure'
      }
    }
}


